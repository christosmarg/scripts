#!/bin/sh

sjail_init()
{
	echo "
path = \"/usr/local/jail/\${name}\";
host.hostname = \"\${name}\";

exec.clean;
exec.start = \"/bin/sh /etc/rc\";
exec.stop = \"/bin/sh /etc/rc.shutdown\";
allow.mount;
allow.raw_sockets = 1;
mount.devfs;
devfs_ruleset = \"5\";
vnet;
sysvmsg = new;
sysvsem = new;
sysvshm = new;
" >> /etc/jail.conf

	echo "
if_bridge_load=\"YES\"
if_epair_load=\"YES\"

cloned_interfaces=\"bridge0 epair0\"
ifconfig_bridge0=\"addm re0 addm epair0a up\"
" >> /etc/rc.conf

	echo "
[devfsrules_jails=5]
add include \$devfsrules_hide_all
add include \$devfsrules_unhide_basic
add include \$devfsrules_unhide_login
add path 'bpf*' unhide
" >> /etc/devfs.rules

	/etc/netstart
	service devfs restart
}

sjail_jail_exists()
{
	test -d "/usr/local/jail/${name}"
}

sjail_jail_running()
{
	test -n "$(jls -j ${name} 2>/dev/null | sed 1d)"
}

sjail_new()
{
	name="${1}"

	test -z "${name}" && usage

	echo "
${name} {
	vnet.interface = \"epair0b\";
	exec.start += \"dhclient epair0b\";
}
" >> /etc/jail.conf

	sjail_jail_exists && err "\"${name}\" exists already"
	sjail_jail_running && err "\"${name}\" is running"

	mkdir -p /usr/local/jail
	mkdir -p /usr/local/jail/${name}
	bsdinstall jail /usr/local/jail/${name}
}

sjail_del()
{
	name="${1}"

	test -z "${name}" && usage
	sjail_jail_exists || err "\"${name}\" doesn't exist"
	sjail_jail_running && err "\"${name}\" is running"

	chflags -R noschg /usr/local/jail/${name}
	rm -rf /usr/local/jail/${name}
	sed -i '' "/${name} {/,/}/d" /etc/jail.conf
}

sjail_start()
{
	xflag="no"

	while getopts "x" arg; do
	case "${arg}" in
		x) xflag="yes" ;;
		*) usage ;;
	esac
	done
	shift $((OPTIND - 1))

	name="${1}"
	test -z "${name}" && usage
	sjail_jail_exists || err "\"${name}\" doesn't exist"
	sjail_jail_running && err "\"${name}\" is running"

	ifconfig epair0a destroy
	ifconfig epair0 create
	ifconfig bridge0 addm epair0a
	ifconfig epair0a up
	if [ -z $(service -e | grep jail) ]; then
		service jail onestart ${name}
	else
		service jail start ${name}
	fi

	if [ ${xflag} = "yes" ]; then
		xhost +
		mount_nullfs /tmp/.X11-unix /usr/local/jail/${name}/tmp/.X11-unix
	fi
}

sjail_stop()
{
	xflag="no"

	while getopts "x" arg; do
	case "${arg}" in
		x) xflag="yes" ;;
		*) usage ;;
	esac
	done
	shift $((OPTIND - 1))

	name="${1}"
	test -z "${name}" && usage
	sjail_jail_exists || err "\"${name}\" doesn't exist"
	sjail_jail_running || err "\"${name}\" is not running"

	if [ ${xflag} = "yes" ]; then
		xhost -
		umount /usr/local/jail/${name}/tmp/.X11-unix
	fi

	if [ -z $(service -e | grep jail) ]; then
		service jail onestop ${name}
	else
		service jail stop ${name}
	fi
	ifconfig epair0a destroy
}

usage()
{
	echo "usage: ${0##*/} init" 1>&2
	echo "       ${0##*/} new jail" 1>&2
	echo "       ${0##*/} del jail" 1>&2
	echo "       ${0##*/} start [-x] jail" 1>&2
	echo "       ${0##*/} stop [-x] jail" 1>&2
	exit 1
}

err()
{
	echo "${0##*/}: ${@}" 1>&2
	exit 1
}

# TODO handle multiple jails (make new epairs for each jail)?
cmd="${1}"
shift 1
case "${cmd}" in
	init) sjail_init ;;
	del) sjail_del ${@} ;;
	new) sjail_new ${@} ;;
	start) sjail_start ${@} ;;
	stop) sjail_stop ${@} ;;
	*) usage ;;
esac
