#!/bin/sh

usage()
{
	echo "usage: ${0##*/} [-ir] <src> <dst>" 1>&2
	exit 1
}

err()
{
	echo "${0##*/}: ${@}" 1>&2
	exit 1
}

pool_exists()
{
	local foo=$(zpool list -o name | sed 1d | grep -x "${1}")
	test -z "${foo}" && err "pool ${1} does not exist"
}

last_snap()
{
	zfs list -t snapshot -o name "${1}" | cut -f2 -d'@' | tail -1
}

f_incr=0	# Incremental backup
f_snap=0	# Renew snapshots in case they already exist

while getopts ir arg; do
case "${arg}" in
	i) f_incr=1 ;;
	r) f_snap=1 ;;
	*) usage ;;
esac
done
shift $((OPTIND - 1))

test ${#} -ne 2 && usage

src_pool="${1}"
dst_pool="${2}"

pool_exists "${src_pool}"
pool_exists "${dst_pool}"

new_snap="$(date +%Y%m%d)"
src_last_snap=$(last_snap "${src_pool}")
dst_last_snap=$(last_snap "${dst_pool}")
nsnaps=$(zfs list -t snapshot -o name ${dst_pool} | sed 1d | wc -l)

# Make appropriate checks before creating new snapshot.
# If the snapshot already exists, either renew it or exit.
if [ "${src_last_snap}" = "${new_snap}" ]; then
	if [ ${f_snap} -eq 1 ]; then
		zfs destroy -r ${src_pool}@${new_snap}
	else
		err "snapshot ${new_snap} exists already"
	fi
fi
zfs snapshot -r ${src_pool}@${new_snap}

# Overwrite dst snapshot if it already exists when the -r option is passed,
# otherwise, exit. Also make sure there are more than 1 snapshots before we
# delete anything.
if [ ! ${nsnaps} -le 1 ] && [ "${dst_last_snap}" = "${new_snap}" ]; then
	test ${f_snap} -eq 1 || err "snapshot ${new_snap} exists already"
	zfs destroy -r ${dst_pool}@${new_snap}
fi

if [ ${f_incr} -eq 1 ]; then
	zfs send -RI ${src_pool}@${last_snap} ${src_pool}@${new_snap} | pv | zfs recv -Fu ${dst_pool}
else
	zfs send -R ${src_pool}@${new_snap} | pv | zfs recv -Fu ${dst_pool}
fi
